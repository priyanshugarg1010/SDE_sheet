class Solution {
public:
    void nextPermutation(vector<int>& nums) {
        //algorithm 
        // travese from back to start search a[i] <  a[i+1] ind1 = element
        //a [ind2 ] > a[ind1] ind2 = elememt
        //swap(a[ind1] , a[ind2])
        //reverse(ind1+1 , last)
        
        int n = nums.size(),k , l;
        for(k = n - 2; k >= 0; k--){
            if(nums[k] < nums[k + 1]) break;
        }
        
        if(k < 0 ) reverse(nums.begin(), nums.end());
        
        else{
            for(l = n - 1; l > k; l-- ){
                if(nums[l] > nums[k]) break;
            }
            
            swap(nums[k], nums[l]);
            reverse(nums.begin() + k + 1, nums.end());
        }
       
    }
};
